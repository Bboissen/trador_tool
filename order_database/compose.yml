name: order-service-db

x-postgres-env: &postgres-env
  POSTGRES_USER: ${POSTGRES_USER:-postgres}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
  POSTGRES_DB: ${POSTGRES_DB:-orders}

services:
  db:
    build: .
    environment: *postgres-env
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}
      interval: 2s
      timeout: 3s
      retries: 30
      start_period: 5s
    command:
      [
        "postgres",
        "-c",
        "log_statement=none",
        "-c",
        "shared_preload_libraries=pg_stat_statements"
      ]
    volumes:
      - ./00_extensions.sql:/docker-entrypoint-initdb.d/00_extensions.sql:ro
      - ./01_complete_setup.sql:/docker-entrypoint-initdb.d/01_complete_setup.sql:ro
      - ./02_integrations.sql:/docker-entrypoint-initdb.d/02_integrations.sql:ro
      - ./03_operations.sql:/docker-entrypoint-initdb.d/03_operations.sql:ro
      - ./04_indexes_partitions.sql:/docker-entrypoint-initdb.d/04_indexes_partitions.sql:ro
      - pgdata:/var/lib/postgresql
    ports:
      - target: 5432
        published: ${POSTGRES_PUBLISHED_PORT:-54329}
        protocol: tcp

volumes:
  pgdata:
    driver: local
