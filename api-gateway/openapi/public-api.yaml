openapi: 3.1.0
info:
  title: Stashfi Public API
  description: Public, consumer-facing API surface exposed by the gateway
  version: 0.1.0
  contact:
    name: Stashfi Team

servers:
  - url: https://api.stashfi.example
    description: Production API (placeholder)
  - url: http://localhost:8080
    description: Local development

paths:
  /api/v1/status:
    get:
      summary: Service status endpoint
      description: Returns status information about the API gateway service
      operationId: getPublicStatus
      tags: [Status]
      responses:
        '200':
          description: Service status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  service:
                    type: string
                    example: api-gateway
                  version:
                    type: string
                    example: 0.1.0
                  status:
                    type: string
                    enum: [operational, degraded, down]
                  timestamp:
                    type: integer
                    format: int64
        '500':
          description: Internal error

  /api/v1/orders:
    get:
      summary: List or query orders
      description: Proxies to the Order service. Request/response schema is defined by the Order service.
      operationId: listOrders
      tags: [Orders]
      responses:
        '200': { description: Success }
        '400': { description: Bad request }
        '401': { description: Unauthorized }
        '500': { description: Upstream error }
    post:
      summary: Create a new order
      description: Proxies to the Order service. Request/response schema is defined by the Order service.
      operationId: createOrder
      tags: [Orders]
      responses:
        '201': { description: Created }
        '400': { description: Invalid payload }
        '401': { description: Unauthorized }
        '500': { description: Upstream error }

  /api/v1/orders/{id}:
    get:
      summary: Get order by ID
      description: Proxies to the Order service.
      operationId: getOrder
      tags: [Orders]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Found }
        '401': { description: Unauthorized }
        '404': { description: Not found }
        '500': { description: Upstream error }
    delete:
      summary: Cancel order by ID
      description: Proxies to the Order service.
      operationId: cancelOrder
      tags: [Orders]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '204': { description: No content }
        '401': { description: Unauthorized }
        '404': { description: Not found }
        '500': { description: Upstream error }

tags:
  - name: Status
    description: Service status information
  - name: Orders
    description: Order operations
